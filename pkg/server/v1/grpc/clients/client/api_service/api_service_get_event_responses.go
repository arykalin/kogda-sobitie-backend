// Code generated by go-swagger; DO NOT EDIT.

package api_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/arykalin/kogda-sobitie-backend/pkg/server/v1/grpc/clients/models"
)

// APIServiceGetEventReader is a Reader for the APIServiceGetEvent structure.
type APIServiceGetEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *APIServiceGetEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAPIServiceGetEventOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAPIServiceGetEventDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAPIServiceGetEventOK creates a APIServiceGetEventOK with default headers values
func NewAPIServiceGetEventOK() *APIServiceGetEventOK {
	return &APIServiceGetEventOK{}
}

/*APIServiceGetEventOK handles this case with default header values.

A successful response.
*/
type APIServiceGetEventOK struct {
	Payload *models.GrpcGetEventResponse
}

func (o *APIServiceGetEventOK) Error() string {
	return fmt.Sprintf("[GET /event/{eventId}][%d] apiServiceGetEventOK  %+v", 200, o.Payload)
}

func (o *APIServiceGetEventOK) GetPayload() *models.GrpcGetEventResponse {
	return o.Payload
}

func (o *APIServiceGetEventOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGetEventResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIServiceGetEventDefault creates a APIServiceGetEventDefault with default headers values
func NewAPIServiceGetEventDefault(code int) *APIServiceGetEventDefault {
	return &APIServiceGetEventDefault{
		_statusCode: code,
	}
}

/*APIServiceGetEventDefault handles this case with default header values.

An unexpected error response.
*/
type APIServiceGetEventDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the Api service get event default response
func (o *APIServiceGetEventDefault) Code() int {
	return o._statusCode
}

func (o *APIServiceGetEventDefault) Error() string {
	return fmt.Sprintf("[GET /event/{eventId}][%d] ApiService_GetEvent default  %+v", o._statusCode, o.Payload)
}

func (o *APIServiceGetEventDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *APIServiceGetEventDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
