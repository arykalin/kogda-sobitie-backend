// Code generated by go-swagger; DO NOT EDIT.

package api_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewAPIServiceListEventsParams creates a new APIServiceListEventsParams object
// with the default values initialized.
func NewAPIServiceListEventsParams() *APIServiceListEventsParams {
	var ()
	return &APIServiceListEventsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAPIServiceListEventsParamsWithTimeout creates a new APIServiceListEventsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAPIServiceListEventsParamsWithTimeout(timeout time.Duration) *APIServiceListEventsParams {
	var ()
	return &APIServiceListEventsParams{

		timeout: timeout,
	}
}

// NewAPIServiceListEventsParamsWithContext creates a new APIServiceListEventsParams object
// with the default values initialized, and the ability to set a context for a request
func NewAPIServiceListEventsParamsWithContext(ctx context.Context) *APIServiceListEventsParams {
	var ()
	return &APIServiceListEventsParams{

		Context: ctx,
	}
}

// NewAPIServiceListEventsParamsWithHTTPClient creates a new APIServiceListEventsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAPIServiceListEventsParamsWithHTTPClient(client *http.Client) *APIServiceListEventsParams {
	var ()
	return &APIServiceListEventsParams{
		HTTPClient: client,
	}
}

/*APIServiceListEventsParams contains all the parameters to send to the API endpoint
for the Api service list events operation typically these are written to a http.Request
*/
type APIServiceListEventsParams struct {

	/*Date*/
	Date *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the Api service list events params
func (o *APIServiceListEventsParams) WithTimeout(timeout time.Duration) *APIServiceListEventsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the Api service list events params
func (o *APIServiceListEventsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the Api service list events params
func (o *APIServiceListEventsParams) WithContext(ctx context.Context) *APIServiceListEventsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the Api service list events params
func (o *APIServiceListEventsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the Api service list events params
func (o *APIServiceListEventsParams) WithHTTPClient(client *http.Client) *APIServiceListEventsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the Api service list events params
func (o *APIServiceListEventsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDate adds the date to the Api service list events params
func (o *APIServiceListEventsParams) WithDate(date *string) *APIServiceListEventsParams {
	o.SetDate(date)
	return o
}

// SetDate adds the date to the Api service list events params
func (o *APIServiceListEventsParams) SetDate(date *string) {
	o.Date = date
}

// WriteToRequest writes these params to a swagger request
func (o *APIServiceListEventsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Date != nil {

		// query param date
		var qrDate string
		if o.Date != nil {
			qrDate = *o.Date
		}
		qDate := qrDate
		if qDate != "" {
			if err := r.SetQueryParam("date", qDate); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
